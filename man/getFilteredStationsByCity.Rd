% Generated by roxygen2 (4.1.0.9000): do not edit by hand
% Please edit documentation in R/getFilteredStationsByCity.R
\name{getFilteredStationsByCity}
\alias{getFilteredStationsByCity}
\title{Get k-nearest station data, Filtered}
\usage{
getFilteredStationsByCity(city.list, station.list, k = NULL, begin, end,
  distance = 100, hourly_interval = 3, tolerance = 0.05)
}
\arguments{
\item{city.list}{City of list of Cities. The format should be as follows: "City, State", or "City, Country"}

\item{station.list}{Full list of ISD stations included in the package}

\item{k}{The number of stations to return}

\item{begin}{Start year (4 digits)}

\item{end}{End year (4 digits)}

\item{distance}{Maximum distance allowable from each city's reference point}

\item{hourly_interval}{Minimum hourly interval allowable (1=hourly; 3 = every 3 hours; 6 = every 6 hours, etc..)}

\item{tolerance}{This is the percent, in decimals, of missing data you will allow. (.05 = 5% of total data)}
}
\value{
Returns a list of four items.
    1) A dataframe with the status of downloading each year's data for each station
    2) A dataframe with the number of stations removed and kept during the filtering process
    3) A list of names of the final stations returned
    2) A list of dataframes.  Each dataframe is all years data of a particular station.
}
\description{
This function utilizes the kNStation() function to find the k-nearest stations,
and downloads all the data for those stations in between a given date range (in years). It then applies
four filters:
}
\details{
1) Remove stations with little to no data
2) Remove stations that exceed a maximum distance from each city's reference point
3) Remove stations that exceed a threshold of missing data, including NA values
4) Select closest station remaining for each city, as all remaining stations are deemed adequate
}
\examples{
\dontrun{

data(stations) #called in as 'station.list'
cities <- c("Nairobi, Kenya", "Tema, Ghana", "Accra, Ghana", "Abidjan, Ivory Coast")
get.stations <- getFilteredStationsByCity(cities, station.list, begin = 2012, end = 2013)

get.stations$dl_status

get.stations$removed_rows

get.stations$station_names_final

class(get.stations$station_data)

length(get.stations$station_data)
}
}

